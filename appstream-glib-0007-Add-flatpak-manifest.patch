From 8808dc9339e8033b7132e5c4d9afe931a350feec Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Bart=C5=82omiej=20Piotrowski?= <b@bpiotrowski.pl>
Date: Fri, 11 Oct 2019 10:06:41 +0200
Subject: [PATCH 7/8] Add flatpak manifest

---
 .gitignore                                  |  2 +
 contrib/org.freedesktop.appstream-glib.json | 66 +++++++++++++++++++++
 contrib/stemmer-dynlib.patch                | 39 ++++++++++++
 3 files changed, 107 insertions(+)
 create mode 100644 .gitignore
 create mode 100644 contrib/org.freedesktop.appstream-glib.json
 create mode 100644 contrib/stemmer-dynlib.patch

diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..7a5068c
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,2 @@
+builddir/
+repo/
diff --git a/contrib/org.freedesktop.appstream-glib.json b/contrib/org.freedesktop.appstream-glib.json
new file mode 100644
index 0000000..62ae953
--- /dev/null
+++ b/contrib/org.freedesktop.appstream-glib.json
@@ -0,0 +1,66 @@
+{
+    "app-id" : "org.freedesktop.appstream-glib",
+    "runtime" : "org.freedesktop.Platform",
+    "runtime-version" : "19.08",
+    "sdk" : "org.freedesktop.Sdk",
+    "command" : "appstream-util",
+    "separate-locales": false,
+    "finish-args" : [
+        "--filesystem=host",
+        "--share=network"
+    ],
+    "cleanup" : [
+        "*.la",
+        "*.a",
+        "/include",
+        "/lib/pkgconfig"
+    ],
+    "modules" : [
+        {
+            "name": "libyaml",
+            "sources": [
+                {
+                    "type": "archive",
+                    "url": "http://pyyaml.org/download/libyaml/yaml-0.2.1.tar.gz",
+                    "sha256": "78281145641a080fb32d6e7a87b9c0664d611dcb4d542e90baf731f51cbb59cd"
+                }
+            ]
+        },
+        {
+            "name": "stemmer",
+            "buildsystem": "simple",
+            "build-commands": [
+                "make libstemmer.so -j$FLATPAK_BUILDER_N_JOBS",
+                "install -Dm644 include/libstemmer.h /app/include/libstemmer.h",
+                "install -Dm644 libstemmer.so.0.0.0 /app/lib/libstemmer.so.0.0.0",
+                "ln -s libstemmer.so.0.0.0 /app/lib/libstemmer.so.0",
+                "ln -s libstemmer.so.0 /app/lib/libstemmer.so"
+            ],
+            "sources": [
+                {
+                    "type": "git",
+                    "url": "https://github.com/snowballstem/snowball",
+                    "commit": "d29510ae32702a81cdc29177a133e894df854550"
+                },
+                {
+                    "type": "patch",
+                    "path": "stemmer-dynlib.patch"
+                }
+            ]
+        },
+        {
+            "name": "appstream-glib",
+            "buildsystem": "meson",
+            "config-opts": [
+                "-Dgtk-doc=false",
+                "-Drpm=false"
+            ],
+            "sources": [
+                {
+                    "type": "dir",
+                    "path": ".."
+                }
+            ]
+        }
+    ]
+}
diff --git a/contrib/stemmer-dynlib.patch b/contrib/stemmer-dynlib.patch
new file mode 100644
index 0000000..7d86cde
--- /dev/null
+++ b/contrib/stemmer-dynlib.patch
@@ -0,0 +1,39 @@
+diff --git c/GNUmakefile i/GNUmakefile
+index 1693f5a..b33a42e 100644
+--- c/GNUmakefile
++++ i/GNUmakefile
+@@ -112,10 +112,10 @@ C_OTHER_OBJECTS = $(C_OTHER_SOURCES:.c=.o)
+ JAVA_CLASSES = $(JAVA_SOURCES:.java=.class)
+ JAVA_RUNTIME_CLASSES=$(JAVARUNTIME_SOURCES:.java=.class)
+ 
+-CFLAGS=-O2 -W -Wall -Wmissing-prototypes -Wmissing-declarations
++CFLAGS=-O2 -fPIC -W -Wall -Wmissing-prototypes -Wmissing-declarations
+ CPPFLAGS=-Iinclude
+ 
+-all: snowball libstemmer.o stemwords $(C_OTHER_SOURCES) $(C_OTHER_HEADERS) $(C_OTHER_OBJECTS)
++all: snowball libstemmer.o libstemmer.so stemwords $(C_OTHER_SOURCES) $(C_OTHER_HEADERS) $(C_OTHER_OBJECTS)
+ 
+ clean:
+ 	rm -f $(COMPILER_OBJECTS) $(RUNTIME_OBJECTS) \
+@@ -158,6 +158,9 @@ libstemmer/libstemmer.o: libstemmer/modules.h $(C_LIB_HEADERS)
+ libstemmer.o: libstemmer/libstemmer.o $(RUNTIME_OBJECTS) $(C_LIB_OBJECTS)
+ 	$(AR) -cru $@ $^
+ 
++libstemmer.so: libstemmer/libstemmer.o $(RUNTIME_OBJECTS) $(C_LIB_OBJECTS)
++	$(CC) $(CFLAGS) -shared $(LDFLAGS) -Wl,-soname,libstemmer.so.0,-version-script,libstemmer/symbol.map -o $@.0.0.0 $^
++
+ stemwords: $(STEMWORDS_OBJECTS) libstemmer.o
+ 	$(CC) -o $@ $^
+ 
+diff --git c/libstemmer/symbol.map i/libstemmer/symbol.map
+new file mode 100644
+index 0000000..7a3d423
+--- /dev/null
++++ i/libstemmer/symbol.map
+@@ -0,0 +1,6 @@
++SB_STEMMER_0 {
++    global:
++        sb_stemmer_*;
++    local:
++        *;
++};
-- 
2.23.0

